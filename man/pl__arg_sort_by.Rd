% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions-lazy.R
\name{pl__arg_sort_by}
\alias{pl__arg_sort_by}
\title{Return the row indices that would sort the column(s)}
\usage{
pl__arg_sort_by(
  ...,
  descending = FALSE,
  nulls_last = FALSE,
  multithreaded = TRUE,
  maintain_order = FALSE
)
}
\arguments{
\item{...}{<\code{\link[rlang:dyn-dots]{dynamic-dots}}> Column(s) to sort by. Can be
character values indicating column names or Expr(s).}

\item{descending}{Sort in descending order. When sorting by multiple
columns, this can be specified per column by passing a logical vector.}

\item{nulls_last}{Place null values last. When sorting by multiple
columns, this can be specified per column by passing a logical vector.}

\item{multithreaded}{Sort using multiple threads.}

\item{maintain_order}{Whether the order should be maintained if elements are
equal. If \code{TRUE}, streaming is not possible and performance might be worse
since this requires a stable search.}
}
\value{
A polars \link{expression}
}
\description{
Return the row indices that would sort the column(s)
}
\examples{
# Pass a single column name to compute the arg sort by that column.
df <- pl$DataFrame(
  a = c(0, 1, 1, 0),
  b = c(3, 2, 3, 2),
  c = c(1, 2, 3, 4)
)
df$select(pl$arg_sort_by("a"))

# Compute the arg sort by multiple columns by either passing a list of
# columns, or by specifying each column as a positional argument.
df$select(pl$arg_sort_by("a", "b", descending = TRUE))

# Use gather to apply the arg sort to other columns.
df$select(pl$col("c")$gather(pl$arg_sort_by("a")))
}
