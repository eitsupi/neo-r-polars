% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataframe-frame.R
\name{dataframe__clone}
\alias{dataframe__clone}
\title{Clone a DataFrame}
\usage{
dataframe__clone()
}
\value{
A polars \link{DataFrame}
}
\description{
This is a cheap operation that does not copy data. It is rarely useful as
\code{DataFrame}s are nearly 100\% immutable, meaning that any modification of a
\code{DataFrame} would lead to a clone anyways, but this can be useful when
dealing with attributes (see examples).
}
\examples{
df1 <- as_polars_df(iris)

# Make a function to take a DataFrame, add an attribute, and return a DataFrame
give_attr <- function(data) {
  attr(data, "created_on") <- "2024-01-29"
  data
}
df2 <- give_attr(df1)

# Problem: the original DataFrame also gets the attribute while it shouldn't!
attributes(df1)

# Use $clone() inside the function to avoid that
give_attr <- function(data) {
  data <- data$clone()
  attr(data, "created_on") <- "2024-01-29"
  data
}
df1 <- as_polars_df(iris)
df2 <- give_attr(df1)

# now, the original DataFrame doesn't get this attribute
attributes(df1)
}
