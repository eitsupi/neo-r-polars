% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expr-datetime.R
\name{expr_dt_add_business_days}
\alias{expr_dt_add_business_days}
\title{Offset by \code{n} business days.}
\usage{
expr_dt_add_business_days(
  n,
  ...,
  week_mask = c(TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE),
  holidays = as.Date(integer(0)),
  roll = c("raise", "backward", "forward")
)
}
\arguments{
\item{n}{An integer value or a \link[=Expr]{polars expression} representing the number of
business days to offset by.}

\item{...}{These dots are for future extensions and must be empty.}

\item{week_mask}{Non-NA logical vector of length 7, representing the days of
the week to count. The default is Monday to Friday (\code{c(TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE)}).
If you wanted to count only Monday to Thursday, you would pass
\code{c(TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE)}.}

\item{holidays}{A \link{Date} class vector, representing the holidays to exclude from the count.}

\item{roll}{What to do when the start date lands on a non-business day.
Options are:
\itemize{
\item \code{"raise"}: raise an error;
\item \code{"forward"}: move to the next business day;
\item \code{"backward"}: move to the previous business day.
}}
}
\value{
A polars \link{expression}
}
\description{
Offset by \code{n} business days.
}
\examples{
df <- pl$DataFrame(start = as.Date(c("2020-1-1", "2020-1-2")))
df$with_columns(result = pl$col("start")$dt$add_business_days(5))

# You can pass a custom weekend - for example, if you only take Sunday off:
week_mask <- c(TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE)
df$with_columns(
  result = pl$col("start")$dt$add_business_days(5, week_mask = week_mask)
)

# You can also pass a list of holidays:
holidays <- as.Date(c("2020-1-3", "2020-1-6"))
df$with_columns(
  result = pl$col("start")$dt$add_business_days(5, holidays = holidays)
)

# Roll all dates forwards to the next business day:
df <- pl$DataFrame(start = as.Date(c("2020-1-5", "2020-1-6")))
df$with_columns(
  rolled_forwards = pl$col("start")$dt$add_business_days(0, roll = "forward")
)
}
