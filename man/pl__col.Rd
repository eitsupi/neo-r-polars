% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions-col.R
\name{pl__col}
\alias{pl__col}
\title{Create an expression representing column(s) in a DataFrame}
\usage{
pl__col(...)
}
\arguments{
\item{...}{<\code{\link[rlang:dyn-dots]{dynamic-dots}}>
The name or \link[=DataType]{data type} of the column(s) to represent.
Unnamed objects one of the following:
\itemize{
\item Single string(s) representing column names
\itemize{
\item Regular expressions starting with \code{^} and ending with \code{$} are allowed.
\item Single wildcard \code{"*"}  has a special meaning: check the examples.
}
\item \link[=DataType]{Polars DataType(s)}
}}
}
\value{
A polars \link{expression}
}
\description{
Create an expression representing column(s) in a DataFrame
}
\examples{
# a single column by a character
pl$col("foo")

# multiple columns by characters
pl$col("foo", "bar")

# multiple columns by polars data types
pl$col(pl$Float64, pl$String)

# Single `"*"` is converted to a wildcard expression
pl$col("*")

# Character vectors with length > 1 should be used with `!!!`
pl$col(!!!c("foo", "bar"), "baz")
pl$col("foo", !!!c("bar", "baz"))

# there are some special notations for selecting columns
df <- pl$DataFrame(foo = 1:3, bar = 4:6, baz = 7:9)

## select all columns with a wildcard `"*"`
df$select(pl$col("*"))

## select multiple columns by a regular expression
## starts with `^` and ends with `$`
df$select(pl$col("^ba.*$"))
}
