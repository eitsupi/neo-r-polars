% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_polars.R
\name{check_polars}
\alias{check_polars}
\alias{check_polars_dtype}
\alias{check_polars_series}
\alias{check_polars_df}
\title{Check if the argument is a polars object inside a function}
\usage{
check_polars_dtype(
  x,
  ...,
  allow_null = FALSE,
  arg = caller_arg(x),
  call = caller_env()
)

check_polars_series(
  x,
  ...,
  allow_null = FALSE,
  arg = caller_arg(x),
  call = caller_env()
)

check_polars_df(
  x,
  ...,
  allow_null = FALSE,
  arg = caller_arg(x),
  call = caller_env()
)
}
\arguments{
\item{x}{An object to check.}

\item{...}{Arguments passed to \code{\link[rlang:abort]{rlang::abort()}}.}

\item{allow_null}{If \code{TRUE}, \code{NULL} is allowed as a valid input.}

\item{arg}{An argument name as a string. This argument
will be mentioned in error messages as the input that is at the
origin of a problem.}

\item{call}{The execution environment of a currently
running function, e.g. \code{caller_env()}. The function will be
mentioned in error messages as the source of the error. See the
\code{call} argument of \code{\link[rlang:abort]{abort()}} for more information.}
}
\value{
\code{NULL} invisibly.
}
\description{
Functions to check if the argument is a polars object.
If the argument is not the correct class, an informative error is thrown.
}
\details{
These functions are derived from the \code{standalone-types-check} functions
from the \link[rlang:rlang-package]{rlang} package
(Can be installed with \code{usethis::use_standalone("r-lib/rlang", file = "types-check")}).
}
\examples{
sample_func <- function(x) {
  check_polars_df(x)
  TRUE
}

sample_func(as_polars_df(mtcars))
try(sample_func(mtcars))
}
