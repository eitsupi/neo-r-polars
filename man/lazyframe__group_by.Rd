% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lazyframe-frame.R
\name{lazyframe__group_by}
\alias{lazyframe__group_by}
\title{Start a group by operation}
\usage{
lazyframe__group_by(..., .maintain_order = FALSE)
}
\arguments{
\item{...}{<\code{\link[rlang:dyn-dots]{dynamic-dots}}> Column(s) to group by.
Accepts expression input. Strings are parsed as column names.}

\item{.maintain_order}{Ensure that the order of the groups is consistent with
the input data. This is slower than a default group by. Setting this to
\code{TRUE} blocks the possibility to run on the streaming engine.}
}
\value{
A lazy groupby
}
\description{
Start a group by operation
}
\examples{
# Group by one column and call agg() to compute the grouped sum of another
# column.
lf <- pl$LazyFrame(
  a = c("a", "b", "a", "b", "c"),
  b = c(1, 2, 1, 3, 3),
  c = c(5, 4, 3, 2, 1)
)
lf$group_by("a")$agg(pl$col("b")$sum())$collect()

# Set .maintain_order = TRUE to ensure the order of the groups is consistent
# with the input.
lf$group_by("a", .maintain_order = TRUE)$agg(pl$col("b")$sum())$collect()

# Group by multiple columns by passing a vector of column names.
lf$group_by(c("a", "b"))$agg(pl$col("c")$max())$collect()

# Or use positional arguments to group by multiple columns in the same way.
# Expressions are also accepted.
lf$
  group_by("a", pl$col("b") / 2)$
  agg(pl$col("c")$mean())$collect()
}
