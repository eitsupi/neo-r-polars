% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expr-expr.R
\name{expr__is_between}
\alias{expr__is_between}
\title{Check if an expression is between the given lower and upper bounds}
\usage{
expr__is_between(
  lower_bound,
  upper_bound,
  closed = c("both", "left", "right", "none")
)
}
\arguments{
\item{lower_bound}{Lower bound value. Accepts expression input. Strings are
parsed as column names, other non-expression inputs are parsed as literals.}

\item{upper_bound}{Upper bound value. Accepts expression input. Strings are
parsed as column names, other non-expression inputs are parsed as literals.}

\item{closed}{Define which sides of the interval are closed (inclusive). Must
be one of \code{"left"}, \code{"right"}, \code{"both"} or \code{"none"}.}
}
\value{
A polars \link{expression}
}
\description{
Check if an expression is between the given lower and upper bounds
}
\details{
If the value of the \code{lower_bound} is greater than that of the \code{upper_bound}
then the result will be \code{FALSE}, as no value can satisfy the condition.
}
\examples{
df <- pl$DataFrame(num = 1:5)
df$with_columns(
  is_between = pl$col("num")$is_between(2, 4)
)

# Use the closed argument to include or exclude the values at the bounds:
df$with_columns(
  is_between = pl$col("num")$is_between(2, 4, closed = "left")
)

# You can also use strings as well as numeric/temporal values (note: ensure
# that string literals are wrapped with lit so as not to conflate them with
# column names):
df <- pl$DataFrame(a = letters[1:5])
df$with_columns(
  is_between = pl$col("a")$is_between(pl$lit("a"), pl$lit("c"))
)

# Use column expressions as lower/upper bounds, comparing to a literal value:
df <- pl$DataFrame(a = 1:5, b = 5:1)
df$with_columns(
  between_ab = pl$lit(3)$is_between(pl$col("a"), pl$col("b"))
)
}
