% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataframe-frame.R
\name{dataframe__rolling}
\alias{dataframe__rolling}
\title{Create rolling groups based on a date/time or integer column}
\usage{
dataframe__rolling(
  index_column,
  ...,
  period,
  offset = NULL,
  closed = c("right", "left", "both", "none"),
  group_by = NULL
)
}
\arguments{
\item{index_column}{Column used to group based on the time window. Often of
type Date/Datetime. This column must be sorted in ascending order (or, if
\code{group_by} is specified, then it must be sorted in ascending order within
each group).
In case of a dynamic group by on indices, the data type needs to be either
Int32 or In64. Note that Int32 gets temporarily cast to Int64, so if
performance matters, use an Int64 column.}

\item{...}{These dots are for future extensions and must be empty.}

\item{period}{Length of the window - must be non-negative.}

\item{offset}{Offset of the window. Default is \code{-period}.}

\item{closed}{Define which sides of the interval are closed (inclusive).
Default is \code{"left"}.}

\item{group_by}{Also group by this column/these columns.}
}
\value{
\link[=RollingGroupBy_class]{RollingGroupBy} (a DataFrame with special
rolling groupby methods like \verb{$agg()}).
}
\description{
Different from \code{group_by_dynamic()}, the windows are now determined by the
individual values and are not of constant intervals. For constant intervals
use \code{group_by_dynamic()}.

If you have a time series \verb{<t_0, t_1, ..., t_n>}, then by default the
windows created will be:
\itemize{
\item \verb{(t_0 - period, t_0]}
\item \verb{(t_1 - period, t_1]}
\item …
\item \verb{(t_n - period, t_n]}
}

whereas if you pass a non-default \code{offset}, then the windows will be:
\itemize{
\item \verb{(t_0 + offset, t_0 + offset + period]}
\item \verb{(t_1 + offset, t_1 + offset + period]}
\item …
\item \verb{(t_n + offset, t_n + offset + period]}
}
}
\examples{
dates <- c(
  "2020-01-01 13:45:48",
  "2020-01-01 16:42:13",
  "2020-01-01 16:45:09",
  "2020-01-02 18:12:48",
  "2020-01-03 19:45:32",
  "2020-01-08 23:16:43"
)

df <- pl$DataFrame(dt = dates, a = c(3, 7, 5, 9, 2, 1))$with_columns(
  pl$col("dt")$str$strptime(pl$Datetime())
)

df$rolling(index_column = "dt", period = "2d")$agg(
  sum_a = pl$col("a")$sum(),
  min_a = pl$col("a")$min(),
  max_a = pl$col("a")$max()
)
}
\seealso{
\itemize{
\item \code{\link[=dataframe__group_by_dynamic]{<DataFrame>$group_by_dynamic()}}
}
}
