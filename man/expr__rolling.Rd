% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expr-expr.R
\name{expr__rolling}
\alias{expr__rolling}
\title{Create rolling groups based on a temporal or integer column}
\usage{
expr__rolling(index_column, ..., period, offset = NULL, closed = "right")
}
\arguments{
\item{index_column}{Character. Name of the column used to group based on the
time window. Often of type Date/Datetime. This column must be sorted in
ascending order. In case of a rolling group by on indices, dtype needs to be
one of UInt32, UInt64, Int32, Int64. Note that the first three get cast to
Int64, so if performance matters use an Int64 column.}

\item{...}{These dots are for future extensions and must be empty.}

\item{period}{Length of the window - must be non-negative.}

\item{offset}{Offset of the window. Default is \code{-period}.}

\item{closed}{Define which sides of the range are closed (inclusive).
One of the following: \code{"both"} (default), \code{"left"}, \code{"right"}, \code{"none"}.}
}
\value{
A polars \link{expression}
}
\description{
If you have a time series \verb{<t_0, t_1, ..., t_n>}, then by default the
windows created will be:
\itemize{
\item \verb{(t_0 - period, t_0]}
\item \verb{(t_1 - period, t_1]}
\item …
\item \verb{(t_n - period, t_n]}
}

whereas if you pass a non-default \code{offset}, then the windows will be:
\itemize{
\item \verb{(t_0 + offset, t_0 + offset + period]}
\item \verb{(t_1 + offset, t_1 + offset + period]}
\item …
\item \verb{(t_n + offset, t_n + offset + period]}
}
}
\details{
If you want to compute multiple aggregation statistics over the same dynamic
window, consider using \code{\link[=expr__rolling]{$rolling()}} - this method can cache
the window size computation.
}
\examples{
dates <- as.POSIXct(
  c(
    "2020-01-01 13:45:48", "2020-01-01 16:42:13", "2020-01-01 16:45:09",
    "2020-01-02 18:12:48", "2020-01-03 19:45:32", "2020-01-08 23:16:43"
  )
)
df <- pl$DataFrame(dt = dates, a = c(3, 7, 5, 9, 2, 1))

df$with_columns(
  sum_a = pl$col("a")$sum()$rolling(index_column = "dt", period = "2d"),
  min_a = pl$col("a")$min()$rolling(index_column = "dt", period = "2d"),
  max_a = pl$col("a")$max()$rolling(index_column = "dt", period = "2d")
)
}
