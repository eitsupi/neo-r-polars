% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lazyframe-group_by.R
\name{lazygroupby__agg}
\alias{lazygroupby__agg}
\title{Compute aggregations for each group of a group by operation}
\usage{
lazygroupby__agg(...)
}
\arguments{
\item{...}{<\code{\link[rlang:dyn-dots]{dynamic-dots}}> Aggregations to compute for
each group of the group by operation. Accepts expression input. Strings are
parsed as column names.}
}
\value{
A polars \link{LazyFrame}
}
\description{
Compute aggregations for each group of a group by operation
}
\examples{
# Compute the aggregation of the columns for each group.
lf <- pl$LazyFrame(
  a = c("a", "b", "a", "b", "c"),
  b = c(1, 2, 1, 3, 3),
  c = c(5, 4, 3, 2, 1)
)
lf$group_by("a")$agg(pl$col("b"), pl$col("c"))$collect()

# Compute the sum of a column for each group.
lf$group_by("a")$agg(pl$col("b")$sum())$collect()

# Compute multiple aggregates at once by passing a list of expressions.
lf$group_by("a")$agg(pl$sum("b"), pl$col("c")$mean())$collect()

# Use keyword arguments to easily name your expression inputs.
lf$group_by("a")$agg(
  b_sum = pl$sum("b"),
  c_mean_squared = (pl$col("c") ** 2)$mean()
)$collect()
}
