% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/series-series.R
\name{pl__Series}
\alias{pl__Series}
\alias{polars_series}
\alias{Series}
\title{Polars Series class (\code{polars_series})}
\usage{
pl__Series(name = NULL, values = NULL)
}
\arguments{
\item{name}{A single string or \code{NULL}. Name of the Series.
Will be used as a column name when used in a \link[=DataFrame]{polars DataFrame}.
When not specified, name is set to an empty string.}

\item{values}{An R object. Passed as the \code{x} param of \code{\link[=as_polars_series]{as_polars_series()}}.}
}
\description{
Series are a 1-dimensional data structure, which are similar to \link[=vector]{R vectors}.
Within a series all elements have the same Data Type.
}
\details{
The \code{pl$Series()} function mimics the constructor of the Series class of Python Polars.
This function calls \code{\link[=as_polars_series]{as_polars_series()}} internally to convert the input object
to a Polars Series.
}
\section{Active bindings}{

\itemize{
\item \code{dtype}: \verb{$dtype} returns the data type of the Series.
\item \code{name}: \verb{$name} returns the name of the Series.
\item \code{shape}: \verb{$shape} returns a integer vector of length two with the number of length
of the Series and width of the Series (always 1).
}
}

\examples{
# Constructing a Series by specifying name and values positionally:
s <- pl$Series("a", 1:3)
s

# Active bindings:
s$dtype
s$name
s$shape
}
\seealso{
\itemize{
\item \code{\link[=as_polars_series]{as_polars_series()}}
}
}
